{"version":3,"sources":["pythonCode.js","components/Matrix.js","components/MatrixMultiplication.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["dotProductExerciseCode","maxNumberOfColumns","maxNumberOfRows","pyodide","a","code","runPythonAsync","results","m","globals","get","n","p","A","toJs","map","x","Array","from","B","C","Matrix","matrix","this","props","values","readOnly","onChange","classes","length","numberOfRows","numberOfColumns","console","log","className","divTable","row","i","divTableRow","column","j","divTableCol","TextField","cell","value","e","target","Component","defaultProps","readonly","withStyles","theme","button","margin","spacing","width","textAlign","display","borderLeft","borderRight","borderSpacing","clear","MatrixMultiplication","generateExercise","state","generateDotProductExercise","then","result","setState","answer","col","hasExercise","catch","error","onChangeHandler","intValue","parseInt","Number","isInteger","r","c","updateMatrixCell","handleSubmit","event","preventDefault","isCorrect","lhs","rhs","lhsRow","rhsRow","isMatrixEqual","Container","maxWidth","Paper","paper","onSubmit","parameter","type","label","Button","variant","color","exercise","Typography","rightAnswer","wrongAnswer","height","float","flexDirection","alignItems","App","loadPythonPackages","loadPackage","getPythonVersion","pyodideLoadedHandler","version","isLoaded","window","loadPyodide","indexURL","response","progress","LinearProgress","position","top","left","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.dd6137a7.chunk.js","sourcesContent":["export function dotProductExerciseCode(maxNumberOfColumns, maxNumberOfRows) {\n  return `\nimport random\nimport numpy as np\n\nm = random.randint(1, ${maxNumberOfRows})\nn = random.randint(1, ${maxNumberOfColumns})\np = random.randint(1, ${maxNumberOfColumns})\n\nrng = np.random.default_rng()\nA = rng.integers(low=-10, high=10, size=(m, n), dtype=np.int32)\nB = rng.integers(low=-10, high=10, size=(n, p), dtype=np.int32)\nC = A @ B\n  `\n}\n\nexport async function generateDotProductExercise(pyodide, maxNumberOfRows, maxNumberOfColumns) {\n  const code = dotProductExerciseCode(maxNumberOfRows, maxNumberOfColumns)\n  await pyodide.runPythonAsync(code)\n  const results = {\n    m: pyodide.globals.get('m'),\n    n: pyodide.globals.get('n'),\n    p: pyodide.globals.get('p'),\n    A: pyodide.globals\n      .get('A')\n      .toJs()\n      .map((x) => Array.from(x)),\n    B: pyodide.globals\n      .get('B')\n      .toJs()\n      .map((x) => Array.from(x)),\n    C: pyodide.globals\n      .get('C')\n      .toJs()\n      .map((x) => Array.from(x))\n  }\n  return results\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = (theme) => ({\n  button: {\n    margin: theme.spacing(1, 1, 0, 0)\n  },\n  cell: {\n    width: '4ch',\n    margin: theme.spacing(1),\n    '& .MuiInputBase-input': {\n      textAlign: 'center'\n    }\n  },\n  divTable: {\n    display: 'inline-flex',\n    width: 'auto',\n    borderLeft: '1px solid #666666',\n    borderRight: '1px solid #666666',\n    borderSpacing: '5px',\n    margin: theme.spacing(1)\n  },\n  divTableRow: {\n    display: 'table-row',\n    width: 'auto',\n    clear: 'both'\n  },\n  divTableCol: {\n    // float: 'left' /* fix for  buggy browsers */,\n    display: 'tableColumn',\n    width: 'auto'\n  }\n})\n\nconst getShape = (matrix) => {\n  return [matrix.length, matrix.length === 0 ? 0 : matrix[0].length]\n}\n\nclass Matrix extends Component {\n  render() {\n    const { values, readOnly, onChange, classes } = this.props\n    const [numberOfRows, numberOfColumns] = getShape(values)\n    console.log(values, numberOfRows, numberOfColumns)\n\n    return (\n      <div className={classes.divTable}>\n        {values.map((row, i) => (\n          <div key={`row-${i}`} className={classes.divTableRow}>\n            {row.map((column, j) => (\n              <div className={classes.divTableCol} key={`cell-${i}-${j}`}>\n                <TextField\n                  className={classes.cell}\n                  value={column}\n                  readOnly={readOnly}\n                  onChange={(e) => onChange(i, j, e.target.value)}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nMatrix.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.array),\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool\n}\n\nMatrix.defaultProps = {\n  readonly: false,\n  onChange: () => {}\n}\n\nexport default withStyles(styles)(Matrix)\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { generateDotProductExercise } from '../pythonCode'\nimport Matrix from './Matrix'\nimport { updateMatrixCell, isMatrixEqual } from '../utils'\n\nconst styles = (theme) => ({\n  paper: {\n    height: '100vh'\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n    float: 'right'\n  },\n  parameter: {\n    width: '12ch',\n    margin: theme.spacing(1)\n  },\n  exercise: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  rightAnswer: {\n    color: 'green'\n  },\n  wrongAnswer: {\n    color: 'red'\n  }\n})\n\nclass MatrixMultiplication extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      pyodide: props.pyodide,\n      maxNumberOfRows: 4,\n      maxNumberOfColumns: 4,\n      hasExercise: false,\n      m: 1,\n      n: 1,\n      p: 1,\n      A: [[0]],\n      B: [[0]],\n      C: [[0]],\n      answer: [[0]]\n    }\n  }\n\n  generateExercise = () => {\n    const { maxNumberOfRows, maxNumberOfColumns, pyodide } = this.state\n    generateDotProductExercise(pyodide, maxNumberOfRows, maxNumberOfColumns)\n      .then((result) => {\n        this.setState({\n          ...result,\n          answer: result.C.map((row) => row.map((col) => '')),\n          hasExercise: true\n        })\n        console.log(result)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  onChangeHandler = (i, j, value) => {\n    const intValue = parseInt(value)\n    if (Number.isInteger(intValue)) {\n      value = intValue\n    }\n    const answer = updateMatrixCell(this.state.answer, i, j, value)\n    this.setState({\n      answer\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log('handleSubmit')\n    this.generateExercise()\n  }\n\n  render() {\n    const { maxNumberOfRows, maxNumberOfColumns, hasExercise, A, B, C, answer } = this.state\n    const { classes } = this.props\n\n    const isCorrect = isMatrixEqual(C, answer)\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Paper className={classes.paper}>\n          <form onSubmit={this.handleSubmit}>\n            <TextField className={classes.parameter} type=\"number\" value={maxNumberOfRows} label=\"Max Rows\" />\n            <TextField className={classes.parameter} type=\"number\" value={maxNumberOfColumns} label=\"Max Columns\" />\n            <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n              New Exercise\n            </Button>\n          </form>\n          <div className={classes.exercise}>\n            {hasExercise ? (\n              <>\n                <Matrix values={A} readOnly={true} />\n                <Matrix values={B} readOnly={true} />\n                <span>=</span>\n                <Matrix values={answer} readOnly={false} onChange={this.onChangeHandler} />\n              </>\n            ) : (\n              <Typography variant=\"body1\">Click the button to generate a new exercise</Typography>\n            )}\n            {hasExercise ? (\n              <div>\n                {isCorrect ? (\n                  <Typography className={classes.rightAnswer} variant=\"body1\">\n                    Correct\n                  </Typography>\n                ) : (\n                  <Typography className={classes.wrongAnswer} variant=\"body1\">\n                    Incorrect\n                  </Typography>\n                )}\n              </div>\n            ) : (\n              ''\n            )}\n          </div>\n        </Paper>\n      </Container>\n    )\n  }\n}\n\nMatrixMultiplication.propTypes = {\n  classes: PropTypes.object,\n  pyodide: PropTypes.object\n}\n\nexport default withStyles(styles)(MatrixMultiplication)\n","export function updateMatrixCell(matrix, i, j, value) {\n  return matrix.map((row, r) => row.map((column, c) => (r === i && c === j ? value : column)))\n}\n\nexport function getMatrixShape(matrix) {\n  return [matrix.length, matrix.length === 0 ? 0 : matrix[0].length]\n}\n\nexport function isMatrixEqual(lhs, rhs) {\n  if (lhs.length !== rhs.length) {\n    return false\n  }\n  for (let i = 0; i < lhs.length; ++i) {\n    const lhsRow = lhs[i]\n    const rhsRow = rhs[i]\n    if (lhsRow.length !== rhsRow.length) {\n      return false\n    }\n    for (let j = 0; j < lhsRow.length; ++j) {\n      if (lhsRow[j] !== rhsRow[j]) {\n        return false\n      }\n    }\n  }\n  return true\n}\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography'\nimport MatrixMultiplication from './components/MatrixMultiplication'\n\nconst styles = (theme) => ({\n  progress: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoaded: false,\n      version: null\n    }\n  }\n\n  initialize\n\n  loadPythonPackages = (pyodide) => {\n    return pyodide.loadPackage(['numpy'])\n  }\n\n  getPythonVersion = (pyodide) => {\n    return pyodide.runPythonAsync(\n      `\nimport sys\nsys.version\n`\n    )\n  }\n\n  pyodideLoadedHandler = (pyodide) => {\n    this.loadPythonPackages(pyodide)\n      .then(() => this.getPythonVersion(pyodide))\n      .then((version) => {\n        this.setState({ isLoaded: true, version, pyodide })\n      })\n  }\n\n  componentDidMount() {\n    window\n      .loadPyodide({ indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.17.0/full/' })\n      .then((response) => {\n        this.pyodideLoadedHandler(response)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    const { isLoaded, version, pyodide } = this.state\n    const { classes } = this.props\n\n    if (!isLoaded) {\n      return (\n        <div className={classes.progress}>\n          <Typography variant=\"h2\">Loading Python</Typography>\n          <LinearProgress />\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <div>{version}</div>\n        <MatrixMultiplication pyodide={pyodide} />\n      </div>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default withStyles(styles)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App />\n  </>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}